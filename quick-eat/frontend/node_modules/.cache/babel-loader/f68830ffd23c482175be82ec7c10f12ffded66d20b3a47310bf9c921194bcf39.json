{"ast":null,"code":"var _jsxFileName = \"C:\\\\Afzal-Work\\\\Learning\\\\MERN\\\\quick-eat\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  /*const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')*/\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const [validations, setValidations] = useState({\n    email: '',\n    password: ''\n  });\n  const validateAll = () => {\n    const {\n      email,\n      password\n    } = values;\n    const validations = {\n      email: '',\n      password: ''\n    };\n    let isValid = true;\n    if (!email) {\n      validations.email = 'Email is required';\n      isValid = false;\n    }\n    if (email && !/\\S+@\\S+\\.\\S+/.test(email)) {\n      validations.email = 'Email format must be as example@mail.com';\n      isValid = false;\n    }\n    if (!password) {\n      validations.password = 'Password is required';\n      isValid = false;\n    }\n    if (!isValid) {\n      setValidations(validations);\n    }\n    return isValid;\n  };\n\n  /*const loginValidation = () => {\r\n    // return email.length > 0 && password.length > 0\r\n    \r\n  }*/\n\n  const validateOne = e => {\n    const {\n      email\n    } = e.target;\n    const value = values[email];\n    let message = '';\n    if (!value) {\n      message = `${email} is required`;\n    }\n\n    // if (value && email === 'email' && (value.length < 3 || value.length > 50)) {\n    //   message = 'email must contain between 3 and 50 characters'\n    // }\n\n    if (value && email === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\n      message = 'Email format must be as example@mail.com';\n    }\n    setValidations({\n      ...validations,\n      [email]: message\n    });\n  };\n  const handleChange = e => {\n    console.log(e.target.value);\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validateAll();\n    if (!isValid) {\n      return false;\n    }\n    alert(JSON.stringify(values));\n  };\n  const {\n    email,\n    password\n  } = values;\n  const {\n    email: emailVal,\n    password: passwordVal\n  } = validations;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_page\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            id: \"email\",\n            value: email,\n            onChange: handleChange,\n            onBlur: validateOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: emailVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            id: \"password\",\n            onChange: handleChange,\n            onBlur: validateOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: passwordVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"signup.html\",\n            className: \"lnk\",\n            children: \"Don't have an Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"xwukAr2ejWFlbS2fgVYdVrcVRZ0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Footer","jsxDEV","_jsxDEV","Login","_s","values","setValues","email","password","validations","setValidations","validateAll","isValid","test","validateOne","e","target","value","message","handleChange","console","log","name","handleSubmit","preventDefault","alert","JSON","stringify","emailVal","passwordVal","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","onChange","onBlur","href","_c","$RefreshReg$"],"sources":["C:/Afzal-Work/Learning/MERN/quick-eat/src/Components/Login.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport Footer from \"./Footer\"\r\n\r\nconst Login = () => {\r\n  /*const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')*/\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const [validations, setValidations] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const validateAll = () => {\r\n    const { email, password } = values\r\n    const validations = { email: '', password: '' }\r\n    let isValid = true\r\n\r\n    if (!email) {\r\n      validations.email = 'Email is required'\r\n      isValid = false\r\n    }\r\n\r\n    if (email && !/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      validations.email = 'Email format must be as example@mail.com'\r\n      isValid = false\r\n    }\r\n\r\n    if (!password) {\r\n      validations.password = 'Password is required'\r\n      isValid = false\r\n    }\r\n\r\n    if (!isValid) {\r\n      setValidations(validations)\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /*const loginValidation = () => {\r\n    // return email.length > 0 && password.length > 0\r\n    \r\n  }*/\r\n\r\n  const validateOne = (e) => {\r\n    const { email } = e.target\r\n    const value = values[email]\r\n    let message = ''\r\n    \r\n    if (!value) {\r\n      message = `${email} is required`\r\n    }\r\n    \r\n    // if (value && email === 'email' && (value.length < 3 || value.length > 50)) {\r\n    //   message = 'email must contain between 3 and 50 characters'\r\n    // }\r\n\r\n    if (value && email === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\r\n      message = 'Email format must be as example@mail.com'\r\n    }\r\n    \r\n    setValidations({...validations, [email]: message })\r\n  }\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value)\r\n    const { name, value } = e.target\r\n    setValues({...values, [name]: value })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const isValid = validateAll()\r\n    \r\n    if (!isValid) {\r\n      return false\r\n    }\r\n\r\n    alert(JSON.stringify(values))\r\n  }\r\n  \r\n  const { email, password } = values\r\n\r\n  const { \r\n    email: emailVal, \r\n    password: passwordVal \r\n  } = validations\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className='login_page'>\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" id=\"email\" value={email}\r\n              onChange={handleChange} onBlur={validateOne}\r\n            />\r\n            <small>{emailVal}</small>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} id=\"password\"\r\n              onChange={handleChange} onBlur={validateOne}\r\n            />\r\n            <small>{passwordVal}</small>\r\n          </div>\r\n\r\n          <button className=\"btn\" type=\"submit\">Login</button>\r\n          <div><a href=\"signup.html\" className=\"lnk\">Don't have an Account</a></div>\r\n        </form>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}